/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package de.thomas_oster.octopusdialer;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author thomas
 */
public class OctopusDialer {

    public static void call(String ip, int port, String from, String to) throws IOException, InterruptedException {
        char from0 = from.charAt(0);
        char from1 = from.charAt(1);
        
        
        char peer0_2[] = {
        0x26, 0x80, 0x33, 0x60, 0x31, 0xa1, 0x07, 0x06, 
        0x05, 0x2b, 0x0c, 0x00, 0x81, 0x5a, 0x8a, 0x02, 
        0x06, 0x80, 0xac, 0x15, 0xa2, 0x13, 0xa0, 0x11, 
        0xa0, 0x0f, 0x04, 0x06, 0x41, 0x4d, 0x48, 0x4f, 
        0x53, 0x54, 0x04, 0x05, 0x37, 0x37, 0x37, 0x37, 
        0x37, 0xbe, 0x0b, 0x28, 0x09, 0xa0, 0x07, 0xa0, 
        0x05, 0x03, 0x03, 0x00, 0x10, 0x00 };
        char peer0_3[] = {
        0x26, 0x80, 0x0d, 0xa2, 0x0b, 0x02, 0x01, 0x01, 
        0x30, 0x06, 0x02, 0x02, 0x00, 0xd3, 0x05, 0x00 };
        char peer0_4[] = {
        0x26, 0x80, 0x22, 0xa1, 0x20, 0x02, 0x01, 0x01, 
        0x02, 0x01, 0x33, 0x30, 0x18, 0xe1, 0x16, 0x06, 
        0x06, 0x2b, 0x0c, 0x02, 0x88, 0x53, 0x0f, 0x04, 
        0x0c, 0x1a, 0x04, 0x06, 0xc4, 0x22, 0x04, 0x03, 
        0x00, 0x23, 0x04, 0x0a, 0x00 };
        char peer0_5[] = {
        0x26, 0x80, 0x36, 0xa1, 0x34, 0x02, 0x01, 0x02, 
        0x02, 0x01, 0x47, 0x30, 0x2c, 0x30, 0x04, 0x80, 
        0x02, from0, from1, 0xa0, 0x24, 0x80, 0x04, 0x06, 
        0x00, 0x00, 0x00, 0x86, 0x02, 0x03, 0x00, 0x87, 
        0x02, 0x06, 0x00, 0x88, 0x03, 0x05, 0xd4, 0x00, 
        0x89, 0x03, 0x02, 0x00, 0x18, 0x83, 0x02, 0x05, 
        0x00, 0x85, 0x02, 0x01, 0x00, 0x84, 0x02, 0x07, 
        0x00, 0x26, 0x80, 0x0b, 0xa1, 0x09, 0x02, 0x01, 
        0x03, 0x02, 0x02, 0x00, 0xcb, 0x05, 0x00 };
        char peer0_6[] = {
        0x26, 0x80, 0x11, 0xa1, 0x0f, 0x02, 0x01, 0x04, 
        0x02, 0x02, 0x00, 0xc9, 0x30, 0x06, 0x30, 0x04, 
        0x80, 0x02, from0, from1 };
        char peer0_7[] = {
        0x26, 0x80, 0x11, 0xa1, 0x0f, 0x02, 0x01, 0x05, 
        0x02, 0x02, 0x00, 0xca, 0x30, 0x06, 0x30, 0x04, 
        0x80, 0x02, from0, from1 };
        char peer0_8[] = {
        0x26, 0x80, 0x10, 0xa1, 0x0e, 0x02, 0x01, 0x06, 
        0x02, 0x01, 0x4a, 0x30, 0x06, 0x30, 0x04, 0x80, 
        0x02, from0, from1 };
        char peer0_9[] = new char[]{
        0x26, 0x80, (char) (0x16-2+to.length()), 0xa1, (char) (0x14-2+to.length()), 0x02, 0x01, 0x07, 
        0x02, 0x01, 0x0a, 0x30, (char) (0x0c-2+to.length()), 0x30, 0x04, 0x80, 
        0x02, from0, from1, 0x30, (char) (0x04-2+to.length()), 0x80, (char) (0x02-2+to.length())};
        
        Socket kkSocket = new Socket(ip, port);
        OutputStream out = kkSocket.getOutputStream();
        final InputStream in = kkSocket.getInputStream();
        new Thread(){

            @Override
            public void run() {
                try {
                    int i = in.read();
                    while (i > 0) {
                        //System.out.println("GOT: "+(char) i);
                        i = in.read();
                        
                    }
                } catch (IOException ex) {
                    Logger.getLogger(OctopusDialer.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        }.start();
        for (char[] msg : new char[][]{peer0_2, peer0_3, peer0_4, peer0_5, peer0_6, peer0_7, peer0_8, peer0_9}) {
            //System.out.println("Sending next block");
            for (char c : msg) {
                out.write((byte) c);
            }
            if (msg == peer0_9) {
                out.write(to.getBytes("UTF-8"));
            }
            Thread.sleep(100);
            
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws IOException, InterruptedException {
        if (args.length != 4) {
            System.out.println("Usage: <ip> <port> <from> <to>");
	    return;
        }
        call(args[0], Integer.parseInt(args[1]), args[2], args[3]);
    }
    
}
